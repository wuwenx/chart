const axios = require('axios')

// JenkinsÈÖçÁΩÆ
const jenkinsConfig = {
  url: 'https://jks.popfun.xyz',
  username: 'wuwenxiang',
  token: '1151d55491677b7add0d5aa327b29425a1',
  jobName: 'test/web/web-mm-admin-new'
}

async function getJenkinsCrumb(username, token, jenkinsUrl) {
  try {
    const auth = Buffer.from(`${username}:${token}`).toString('base64')
    const response = await axios.get(`${jenkinsUrl}/crumbIssuer/api/json`, {
      headers: {
        'Authorization': `Basic ${auth}`,
        'Accept': 'application/json'
      },
      timeout: 10000,
      validateStatus: function (status) {
        return status < 500;
      }
    })
    
    if (response.status === 200) {
      return {
        crumbRequestField: response.data.crumbRequestField,
        crumb: response.data.crumb
      }
    }
    return null
  } catch (error) {
    console.log(`   Ëé∑ÂèñCSRF TokenÂ§±Ë¥•: ${error.message}`)
    return null
  }
}

async function testJenkinsAPI() {
  console.log('üîß ÊµãËØïJenkins API...')
  console.log(`URL: ${jenkinsConfig.url}`)
  console.log(`Áî®Êà∑Âêç: ${jenkinsConfig.username}`)
  console.log(`Token: ${jenkinsConfig.token.substring(0, 8)}...`)
  console.log(`‰ªªÂä°: ${jenkinsConfig.jobName}`)
  console.log('')

  const auth = Buffer.from(`${jenkinsConfig.username}:${jenkinsConfig.token}`).toString('base64')
  
  // 1. ÊµãËØïÊ†πAPIËøûÊé•
  console.log('1. ÊµãËØïÊ†πAPIËøûÊé•...')
  try {
    const response = await axios.get(`${jenkinsConfig.url}/api/json`, {
      headers: {
        'Authorization': `Basic ${auth}`,
        'Accept': 'application/json'
      },
      timeout: 10000,
      validateStatus: function (status) {
        return status < 500;
      }
    })
    
    console.log(`   Áä∂ÊÄÅÁ†Å: ${response.status}`)
    console.log(`   ÂÜÖÂÆπÁ±ªÂûã: ${response.headers['content-type']}`)
    
    if (response.status === 200) {
      console.log('   ‚úÖ Ê†πAPIËøûÊé•ÊàêÂäü')
      console.log(`   JenkinsÁâàÊú¨: ${response.data.version || 'Êú™Áü•'}`)
      console.log(`   JenkinsÊ®°Âºè: ${response.data.mode || 'Êú™Áü•'}`)
    } else {
      console.log(`   ‚ùå Ê†πAPIËøûÊé•Â§±Ë¥•: ${response.status}`)
      if (response.data) {
        console.log(`   ÂìçÂ∫îÂÜÖÂÆπ:`, JSON.stringify(response.data, null, 2))
      }
      return
    }
  } catch (error) {
    console.log(`   ‚ùå Ê†πAPIËøûÊé•Â§±Ë¥•: ${error.message}`)
    return
  }
  
  console.log('')

  // 2. Ëé∑ÂèñCSRF Token
  console.log('2. Ëé∑ÂèñCSRF Token...')
  const crumb = await getJenkinsCrumb(jenkinsConfig.username, jenkinsConfig.token, jenkinsConfig.url)
  if (crumb) {
    console.log('   ‚úÖ CSRF TokenËé∑ÂèñÊàêÂäü')
    console.log(`   CrumbÂ≠óÊÆµ: ${crumb.crumbRequestField}`)
    console.log(`   CrumbÂÄº: ${crumb.crumb.substring(0, 16)}...`)
  } else {
    console.log('   ‚ö†Ô∏è  CSRF TokenËé∑ÂèñÂ§±Ë¥•ÔºåÂèØËÉΩ‰∏çÈúÄË¶ÅCSRF‰øùÊä§')
  }
  
  console.log('')

  // 3. ÊµãËØï‰ªªÂä°APIËøûÊé•
  console.log('3. ÊµãËØï‰ªªÂä°APIËøûÊé•...')
  try {
    const jobPath = jenkinsConfig.jobName.replace(/\//g, '/job/')
    const jobUrl = `${jenkinsConfig.url}/job/${jobPath}/api/json`
    console.log(`   ‰ªªÂä°URL: ${jobUrl}`)
    
    const jobResponse = await axios.get(jobUrl, {
      headers: {
        'Authorization': `Basic ${auth}`,
        'Accept': 'application/json'
      },
      timeout: 10000,
      validateStatus: function (status) {
        return status < 500;
      }
    })
    
    console.log(`   Áä∂ÊÄÅÁ†Å: ${jobResponse.status}`)
    console.log(`   ÂÜÖÂÆπÁ±ªÂûã: ${jobResponse.headers['content-type']}`)
    
    if (jobResponse.status === 200) {
      console.log('   ‚úÖ ‰ªªÂä°APIËøûÊé•ÊàêÂäü')
      console.log(`   ‰ªªÂä°ÂêçÁß∞: ${jobResponse.data.name}`)
      console.log(`   ‰ªªÂä°ÊèèËø∞: ${jobResponse.data.description || 'Êó†'}`)
      console.log(`   ÊúÄÂêéÊûÑÂª∫: ${jobResponse.data.lastBuild ? `#${jobResponse.data.lastBuild.number}` : 'Êó†'}`)
      console.log(`   ÊúÄÂêéÊàêÂäüÊûÑÂª∫: ${jobResponse.data.lastSuccessfulBuild ? `#${jobResponse.data.lastSuccessfulBuild.number}` : 'Êó†'}`)
    } else if (jobResponse.status === 404) {
      console.log('   ‚ùå ‰ªªÂä°‰∏çÂ≠òÂú®')
      console.log('   ËØ∑Ê£ÄÊü•‰ªªÂä°Ë∑ØÂæÑÊòØÂê¶Ê≠£Á°Æ')
    } else {
      console.log(`   ‚ùå ‰ªªÂä°APIËøûÊé•Â§±Ë¥•: ${jobResponse.status}`)
      if (jobResponse.data) {
        console.log(`   ÂìçÂ∫îÂÜÖÂÆπ:`, JSON.stringify(jobResponse.data, null, 2))
      }
    }
  } catch (error) {
    console.log(`   ‚ùå ‰ªªÂä°APIËøûÊé•Â§±Ë¥•: ${error.message}`)
  }
  
  console.log('')

  // 4. ÊµãËØïËß¶ÂèëÊûÑÂª∫
  console.log('4. ÊµãËØïËß¶ÂèëÊûÑÂª∫...')
  try {
    const jobPath = jenkinsConfig.jobName.replace(/\//g, '/job/')
    const buildUrl = `${jenkinsConfig.url}/job/${jobPath}/build`
    console.log(`   ÊûÑÂª∫URL: ${buildUrl}`)
    
    const headers = {
      'Authorization': `Basic ${auth}`,
      'Accept': 'application/json'
    }
    
    // Â¶ÇÊûúÊúâCSRF TokenÔºåÊ∑ªÂä†Âà∞ËØ∑Ê±ÇÂ§¥
    if (crumb) {
      headers[crumb.crumbRequestField] = crumb.crumb
      console.log('   ‰ΩøÁî®CSRF TokenËøõË°åËØ∑Ê±Ç')
    }
    
    const buildResponse = await axios.post(buildUrl, {}, {
      headers: headers,
      timeout: 10000,
      validateStatus: function (status) {
        return status < 500;
      }
    })
    
    console.log(`   Áä∂ÊÄÅÁ†Å: ${buildResponse.status}`)
    
    if (buildResponse.status === 200 || buildResponse.status === 201) {
      console.log('   ‚úÖ Ëß¶ÂèëÊûÑÂª∫ÊàêÂäü')
    } else if (buildResponse.status === 403) {
      console.log('   ‚ùå Ê≤°ÊúâÊùÉÈôêËß¶ÂèëÊûÑÂª∫')
    } else {
      console.log(`   ‚ùå Ëß¶ÂèëÊûÑÂª∫Â§±Ë¥•: ${buildResponse.status}`)
      if (buildResponse.data) {
        console.log(`   ÂìçÂ∫îÂÜÖÂÆπ:`, JSON.stringify(buildResponse.data, null, 2))
      }
    }
  } catch (error) {
    console.log(`   ‚ùå Ëß¶ÂèëÊûÑÂª∫Â§±Ë¥•: ${error.message}`)
  }
  
  console.log('')

  // 5. ÊµãËØïËé∑ÂèñÊûÑÂª∫Êó•Âøó
  console.log('5. ÊµãËØïËé∑ÂèñÊûÑÂª∫Êó•Âøó...')
  try {
    const jobPath = jenkinsConfig.jobName.replace(/\//g, '/job/')
    const logUrl = `${jenkinsConfig.url}/job/${jobPath}/lastBuild/consoleText`
    console.log(`   Êó•ÂøóURL: ${logUrl}`)
    
    const logResponse = await axios.get(logUrl, {
      headers: {
        'Authorization': `Basic ${auth}`,
        'Accept': 'text/plain'
      },
      timeout: 10000,
      validateStatus: function (status) {
        return status < 500;
      }
    })
    
    console.log(`   Áä∂ÊÄÅÁ†Å: ${logResponse.status}`)
    
    if (logResponse.status === 200) {
      console.log('   ‚úÖ Ëé∑ÂèñÊûÑÂª∫Êó•ÂøóÊàêÂäü')
      const logContent = logResponse.data.toString()
      console.log(`   Êó•ÂøóÈïøÂ∫¶: ${logContent.length} Â≠óÁ¨¶`)
      console.log(`   Êó•ÂøóÈ¢ÑËßà: ${logContent.substring(0, 200)}...`)
    } else {
      console.log(`   ‚ùå Ëé∑ÂèñÊûÑÂª∫Êó•ÂøóÂ§±Ë¥•: ${logResponse.status}`)
    }
  } catch (error) {
    console.log(`   ‚ùå Ëé∑ÂèñÊûÑÂª∫Êó•ÂøóÂ§±Ë¥•: ${error.message}`)
  }
  
  console.log('')
  
  // 6. Ê£ÄÊü•TokenÊ†ºÂºè
  console.log('6. Ê£ÄÊü•TokenÊ†ºÂºè...')
  console.log(`   TokenÈïøÂ∫¶: ${jenkinsConfig.token.length}`)
  console.log(`   TokenÊ†ºÂºè: ${/^[a-f0-9]{32}$/i.test(jenkinsConfig.token) ? '‚úÖ Ê≠£Á°Æ' : '‚ùå ÂèØËÉΩ‰∏çÊ≠£Á°Æ'}`)
  
  console.log('')
  
  // Êèê‰æõËß£ÂÜ≥Âª∫ËÆÆ
  console.log('üí° Ëß£ÂÜ≥Âª∫ËÆÆ:')
  console.log('   1. Â¶ÇÊûúËÆ§ËØÅÂ§±Ë¥•ÔºåËØ∑Ê£ÄÊü•Áî®Êà∑ÂêçÂíåAPI Token')
  console.log('   2. Â¶ÇÊûú‰ªªÂä°‰∏çÂ≠òÂú®ÔºåËØ∑Ê£ÄÊü•‰ªªÂä°Ë∑ØÂæÑÊòØÂê¶Ê≠£Á°Æ')
  console.log('   3. Â¶ÇÊûúÊùÉÈôê‰∏çË∂≥ÔºåËØ∑ËÅîÁ≥ªJenkinsÁÆ°ÁêÜÂëò')
  console.log('   4. Â¶ÇÊûúCSRF TokenËé∑ÂèñÂ§±Ë¥•ÔºåJenkinsÂèØËÉΩÁ¶ÅÁî®‰∫ÜCSRF‰øùÊä§')
}

// ËøêË°åÊµãËØï
testJenkinsAPI()